<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
  </head>
  <body>
    <button
      type="button"
      data-modal-target="crud-modal"
      data-modal-toggle="crud-modal"
      class="flex gap-2 text-white bg-gradient-to-br from-purple-600 to-blue-500 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2"
    >
      <svg class="w-5 h-5" fill="currentColor" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">
        <!--!Font Awesome Free 6.7.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
        <path
          d="M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 144L48 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l144 0 0 144c0 17.7 14.3 32 32 32s32-14.3 32-32l0-144 144 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-144 0 0-144z"
        />
      </svg>
      Add reporter
    </button>

    <%- include('AddReporterModal') %>
    <table id="example" class="display">
      <thead>
        <tr>
          <th>ID</th>
          <th>Name</th>
          <th>Gender</th>
          <th>Date of Birth</th>
          <th>Actions</th>
          <!-- New Actions Column -->
        </tr>
      </thead>
      <tbody>
        <!-- Table rows will be populated here by DataTables -->
      </tbody>
    </table>

    <%- include('ReporterInfoDrawer') %>

    <script src="/js/time.js"></script>

    <script type="text/javascript">
      const data = <%- JSON.stringify(data) %>;
      const reporters = data.reporters;

      const table = $(document).ready(function () {
        $('#example').DataTable({
          data: reporters,
          columns: [
            { data: '_id' },
            { data: 'name' },
            {data: 'gender'},
            { data: 'dob' },
            {
              // Actions column
              data: null, // `null` because this column doesn't map to any field in the data source
              render: function (data, type, row) {
                // Customize the action buttons for each row
                return `
                      <div class="flex gap-2">
                        <button onclick="toggleDrawer('${row._id}')" data-user-id="${row._id}" class="show-user-info bg-teal-500 text-white hover:bg-teal-600 focus:ring-2 focus:ring-teal-300 gap-2 rounded-lg px-4 py-2 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-2 py-2 text-center inline-flex items-center me-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
                              <svg class="w-5 h-5" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 512 512"><!--!Font Awesome Free 6.7.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM216 336l24 0 0-64-24 0c-13.3 0-24-10.7-24-24s10.7-24 24-24l48 0c13.3 0 24 10.7 24 24l0 88 8 0c13.3 0 24 10.7 24 24s-10.7 24-24 24l-80 0c-13.3 0-24-10.7-24-24s10.7-24 24-24zm40-208a32 32 0 1 1 0 64 32 32 0 1 1 0-64z"/>
                              </svg>
                              <span>Info</span>
                        </button>

                        <form id="delete-form-${row._id}" method="POST" action="/dashboard/admin/reporters/delete-reporter/${row._id}">
                          <button
                              type="button"
                              onclick="confirmDelete('${row._id}')"
                              class="delete-btn text-white gap-2 bg-red-500 hover:bg-red-600 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm px-2 py-2 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
                            >
                              <svg width="20px" height="20px" fill="currentColor" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512">
                                <!--!Font Awesome Free 6.7.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
                                <path
                                  d="M290.7 57.4L57.4 290.7c-25 25-25 65.5 0 90.5l80 80c12 12 28.3 18.7 45.3 18.7L288 480l9.4 0L512 480c17.7 0 32-14.3 32-32s-14.3-32-32-32l-124.1 0L518.6 285.3c25-25 25-65.5 0-90.5L381.3 57.4c-25-25-65.5-25-90.5 0zM297.4 416l-9.4 0-105.4 0-80-80L227.3 211.3 364.7 348.7 297.4 416z"
                                />
                              </svg>
                              <span>Delete</span>
                            </button>
                        </form>
                      </div>
                  `;
              },
              orderable: false, // Prevent ordering on the actions column
              searchable: false // Prevent searching on the actions column
            }
          ],
          columnDefs: [
            {
              targets: 0, // (_id)
              render: function (data, type, row, meta) {
                return `<div class="text-sm flex gap-2 px-4">
                  <div>${data}</div>
                </div>`;
              }
            },
            {
              targets: 1, // name
              createdCell: function (td, cellData, rowData, row, col) {
                $(td).addClass('text-sm text-gray-600 px-4 py-2');
              }
            },
            {
              targets: 2, // gender
              render: function (data, type, row, meta) {
                  return `<div class="flex gap-2">
                  ${data}
                </div>`;
              },
            },
            {
              targets: 3, // dob
              render: function (data, type, row, meta) {
                return `<div class="text-xs">${formatDateTime(data, true)}</div>`;
              }
            },

          ],
          rowCallback: function (row, data, index) {
            // Apply styling to the entire row if necessary
            $(row).addClass('bg-white hover:bg-gray-100'); // Hover effect
            if (data.status === 'Failed') {
              $(row).addClass('bg-red-100'); // Add red background for rows with "Failed" status
            }
          },
          drawCallback: function (settings) {
            // Optional: Apply styles to pagination buttons
          },
          language: {
            // Custom language settings (optional)
            search: 'Search editors:',
            lengthMenu: 'Show _MENU_ entries per page'
          },
          pageLength: 10, // Default page size
          lengthMenu: [10, 25, 50] // Options for page size selection
        });
      });
    </script>

    <script>
      const confirmDelete = (id) => {
        Swal.fire({
          title: 'Are you sure to delete this reporter?',
          text: 'This action cannot be undone.',
          icon: 'warning',
          showCancelButton: true,
          confirmButtonText: 'Yes, delete it!',
          cancelButtonText: 'Cancel',
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33'
        }).then((result) => {
          if (result.isConfirmed) {
            // Find the form by ID and submit it
            const form = document.getElementById(`delete-form-${id}`);
            if (form) form.submit();
          }
        });
      };
    </script>

    <script type="module">
      export function toggleDrawer(id) {
        const $targetEl = document.getElementById('user-info-drawer');

        if (!$targetEl) {
          console.error('Drawer target element not found!');
        }

        const options = {
          placement: 'right',
          backdrop: true,
          bodyScrolling: false,
          edge: false,
          onHide: () => console.log('Drawer is hidden'),
          onShow: () => console.log('Drawer is shown'),
          onToggle: () => console.log('Drawer has been toggled')
        };

        const drawer = new Drawer($targetEl, options);
        const reporter = reporters.find((u) => u._id == id);
        document.getElementById('name-input').value = reporter.name;
        const formattedDate = dayjs(reporter.dob).format('MM-DD-YYYY');
        document.getElementById('dob-input').value = formattedDate;
        document.getElementById('username-input').value = reporter?.accountId?.localAuth?.username ?? '';
        document.getElementById('email-input').value = reporter?.accountId?.email ?? '';
        document.getElementById('gender-input').value = reporter?.gender;
        document.getElementById('_id-input').value = reporter?._id;
        document.getElementById('accountId-input').value = reporter?.accountId?._id;

        const articleList = document.getElementById('article-list');
        articleList.innerHTML = '';
        reporter.reportArticles.forEach((article) => {
          // Create the article container
          const articleDiv = document.createElement('div');
          articleDiv.className = 'p-4 bg-white shadow rounded-lg hover:shadow-lg transition';

          // Create and append the title
          const title = document.createElement('h3');
          title.className = 'text-lg font-semibold text-blue-600';
          title.textContent = article.title;
          articleDiv.appendChild(title);

          // Create and append the creation date
          const date = document.createElement('p');
          date.className = 'text-gray-600 text-sm';
          date.textContent = `Written on: ${formatDateTime(article.createdAt)}`;
          articleDiv.appendChild(date);

          // Create and append the description
          const description = document.createElement('p');
          description.className = 'mt-2 text-gray-700 line-clamp-3';
          description.textContent = article.description;
          articleDiv.appendChild(description);

          // Create and append the "Read More" link
          const readMoreLink = document.createElement('a');
          readMoreLink.className = 'mt-4 inline-block text-blue-500 hover:underline text-sm font-medium';
          readMoreLink.href = `/dashboard/${article._id}/preview`; // Replace '#' with the actual article URL
          readMoreLink.textContent = 'Read More';
          readMoreLink.target = '_blank';
          articleDiv.appendChild(readMoreLink);

          // Append the article container to the list
          articleList.appendChild(articleDiv);
        });
        drawer.toggle();
      }

      window.toggleDrawer = toggleDrawer;
    </script>
  </body>
</html>
