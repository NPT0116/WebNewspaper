<style>
  .comment-button {
    --primary: #ff5569;
    --neutral-1: #f7f8f7;
    --neutral-2: #e7e7e7;
    --radius: 14px;

    /* width: 40vw; */
    cursor: pointer;
    border-radius: var(--radius);
    text-shadow: 0 1px 1px rgba(0, 0, 0, 0.3);
    border: none;
    /* box-shadow: 0 0.5px 0.5px 1px rgba(255, 255, 255, 0.2),
      0 10px 20px rgba(0, 0, 0, 0.2), 0 4px 5px 0px rgba(0, 0, 0, 0.05); */
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    transition: all 0.3s ease;
    /* min-width: 200px; */
    padding: 20px;
    height: 40px;
    font-family: "Galano Grotesque", Poppins, Montserrat, sans-serif;
    font-style: normal;
    /* font-size: 10px; */
    font-weight: 600;
    color: #000;
    background-color: #fff;
  }
  .comment-button:hover {
    transform: scale(1.02);
    box-shadow: 0 0 1px 2px rgba(255, 255, 255, 0.3),
      0 15px 30px rgba(0, 0, 0, 0.3), 0 10px 3px -3px rgba(0, 0, 0, 0.04);
  }
  .comment-button:active {
    transform: scale(1);
    box-shadow: 0 0 1px 2px rgba(255, 255, 255, 0.3),
      0 10px 3px -3px rgba(0, 0, 0, 0.2);
  }
  .comment-button:after {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: var(--radius);
    border: 2.5px solid transparent;
    background: linear-gradient(var(--neutral-1), var(--neutral-2)) padding-box,
      linear-gradient(to bottom, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.45))
        border-box;
    z-index: 0;
    transition: all 0.4s ease;
  }
  .comment-button:hover::after {
    transform: scale(1.05, 1.1);
    box-shadow: inset 0 -1px 3px 0 rgba(255, 255, 255, 1);
  }
  .comment-button::before {
    content: "";
    inset: 7px 6px 6px 6px;
    position: absolute;
    background: linear-gradient(to top, var(--neutral-1), var(--neutral-2));
    border-radius: 30px;
    filter: blur(0.5px);
    z-index: 2;
  }
  .state p {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .state .icon {
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    margin: auto;
    transform: scale(1.25);
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .state .icon svg {
    overflow: visible;
  }

  /* Outline */
  .outline {
    position: absolute;
    border-radius: inherit;
    overflow: hidden;
    z-index: 1;
    opacity: 0;
    transition: opacity 0.4s ease;
    inset: -2px -3.5px;
  }
  .outline::before {
    content: "";
    position: absolute;
    inset: -100%;
    background: conic-gradient(
      from 180deg,
      transparent 60%,
      white 80%,
      transparent 100%
    );
    animation: spin 2s linear infinite;
    animation-play-state: paused;
  }
  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
  .comment-button:hover .outline {
    opacity: 1;
  }
  .comment-button:hover .outline::before {
    animation-play-state: running;
  }

  /* Letters */
  .state p span {
    display: block;
    opacity: 0;
    animation: slideDown 0.8s ease forwards calc(var(--i) * 0.03s);
  }
  .comment-button:hover p span {
    opacity: 1;
    animation: wave 0.5s ease forwards calc(var(--i) * 0.02s);
  }
  .comment-button:focus p span {
    opacity: 1;
    animation: disapear 0.6s ease forwards calc(var(--i) * 0.03s);
  }
  @keyframes wave {
    30% {
      opacity: 1;
      transform: translateY(4px) translateX(0) rotate(0);
    }
    50% {
      opacity: 1;
      transform: translateY(-3px) translateX(0) rotate(0);
      color: var(--primary);
    }
    100% {
      opacity: 1;
      transform: translateY(0) translateX(0) rotate(0);
    }
  }
  @keyframes slideDown {
    0% {
      opacity: 0;
      transform: translateY(-20px) translateX(5px) rotate(-90deg);
      color: var(--primary);
      filter: blur(5px);
    }
    30% {
      opacity: 1;
      transform: translateY(4px) translateX(0) rotate(0);
      filter: blur(0);
    }
    50% {
      opacity: 1;
      transform: translateY(-3px) translateX(0) rotate(0);
    }
    100% {
      opacity: 1;
      transform: translateY(0) translateX(0) rotate(0);
    }
  }
  @keyframes disapear {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
      transform: translateX(5px) translateY(20px);
      color: var(--primary);
      filter: blur(5px);
    }
  }

  /* Plane */
  .state--default .icon svg {
    animation: land 0.6s ease forwards;
  }
  .comment-button:hover .state--default .icon {
    transform: rotate(45deg) scale(1.25);
  }
  .comment-button:focus .state--default svg {
    animation: takeOff 0.8s linear forwards;
  }
  .comment-button:focus .state--default .icon {
    transform: rotate(0) scale(1.25);
  }
  @keyframes takeOff {
    0% {
      opacity: 1;
    }
    60% {
      opacity: 1;
      transform: translateX(70px) rotate(45deg) scale(2);
    }
    100% {
      opacity: 0;
      transform: translateX(160px) rotate(45deg) scale(0);
    }
  }
  @keyframes land {
    0% {
      transform: translateX(-60px) translateY(30px) rotate(-50deg) scale(2);
      opacity: 0;
      filter: blur(3px);
    }
    100% {
      transform: translateX(0) translateY(0) rotate(0);
      opacity: 1;
      filter: blur(0);
    }
  }

  /* Contrail */
  .state--default .icon:before {
    content: "";
    position: absolute;
    top: 50%;
    height: 2px;
    width: 0;
    left: -5px;
    background: linear-gradient(to right, transparent, rgba(0, 0, 0, 0.5));
  }
  .comment-button:focus .state--default .icon:before {
    animation: contrail 0.8s linear forwards;
  }
  @keyframes contrail {
    0% {
      width: 0;
      opacity: 1;
    }
    8% {
      width: 15px;
    }
    60% {
      opacity: 0.7;
      width: 80px;
    }
    100% {
      opacity: 0;
      width: 160px;
    }
  }

  /* States */
  .state {
    padding-left: 29px;
    z-index: 2;
    display: flex;
    position: relative;
  }
  .state--default span:nth-child(4) {
    margin-right: 5px;
  }
  .state--sent {
    display: none;
  }
  .state--sent svg {
    transform: scale(1.25);
    margin-right: 8px;
  }
  .comment-button:focus .state--default {
    position: absolute;
  }
  .comment-button:focus .state--sent {
    display: flex;
  }
  .comment-button:focus .state--sent span {
    opacity: 0;
    animation: slideDown 0.8s ease forwards calc(var(--i) * 0.2s);
  }
  .comment-button:focus .state--sent .icon svg {
    opacity: 0;
    animation: appear 1.2s ease forwards 0.8s;
  }
  @keyframes appear {
    0% {
      opacity: 0;
      transform: scale(4) rotate(-40deg);
      color: var(--primary);
      filter: blur(4px);
    }
    30% {
      opacity: 1;
      transform: scale(0.6);
      filter: blur(1px);
    }
    50% {
      opacity: 1;
      transform: scale(1.2);
      filter: blur(0);
    }
    100% {
      opacity: 1;
      transform: scale(1);
    }
  }
</style>
<div class="border-2 p-5 rounded-lg sm:w-[95%] w-[100%]" >
  <div id="comment-header" class="flex sm:flex-row flex-col justify-between items-center">
    <h1 class="text-2xl font-bold flex flex-row" class="mr-2">Comments (<div id="comment-length" > <%=comments.length%></div>)</h1>
    <%if (profile) {%>
    <%} else {%>
    <div id="comment-guest-nav" class="text-center">
      <a href="/login" class="text-blue-500 font-bold hover:text-blue-700 cursor-pointer">Login</a>
      |
      <a href="/register" class="text-blue-500 font-bold hover:text-blue-700 cursor-pointer">Register</a>
      To send comment
    </div>
    <%} %>
  </div>

  <div class="mt-8 w-full">
    <div class="flex flex-col space-y-2" style="padding-bottom: 30px; border-bottom: 2px solid black">
      <form id="comment-form" action="/section/<%= sectionSlug %>/article/<%= articleSlug %>/save-comment" method="POST" class="w-full" <%=profile ? '' : 'disabled' %>>
        <textarea
          id="message"
          name="content"
          placeholder="What do you think about this article ?"
          rows="4"
          required
          class="w-full px-4 py-2 overflow-y-hidden bg-gray-200 rounded-lg shadow-sm resize-none focus:ring-2 focus:ring-gray-500 focus:border-gray-500 transition duration-200 ease-in-out auto-expand"
          <%=profile ? '' : 'disabled' %>
        ></textarea>

        <div class="flex justify-between">
          <!-- <button type="submit" class="text-[10px] sm:text-xl rounded-lg <%=profile ? 'bg-gray-900 hover:bg-gray-500' : 'bg-gray-500' %>   px-4 py-2 text-white font-bold transition-all duration-200" <%=profile ? '' : 'disabled' %>>Submit</button> -->
          <button type="submit" class="comment-button sm:w-[200px] w-[190px] text-sm p-2">
            <div class="outline"></div>
            <div class="state state--default">
              <div class="icon">
                <svg
                  width="1em"
                  height="1em"
                  viewBox="0 0 24 24"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <g style="filter: url(#shadow)">
                    <path
                      d="M14.2199 21.63C13.0399 21.63 11.3699 20.8 10.0499 16.83L9.32988 14.67L7.16988 13.95C3.20988 12.63 2.37988 10.96 2.37988 9.78001C2.37988 8.61001 3.20988 6.93001 7.16988 5.60001L15.6599 2.77001C17.7799 2.06001 19.5499 2.27001 20.6399 3.35001C21.7299 4.43001 21.9399 6.21001 21.2299 8.33001L18.3999 16.82C17.0699 20.8 15.3999 21.63 14.2199 21.63ZM7.63988 7.03001C4.85988 7.96001 3.86988 9.06001 3.86988 9.78001C3.86988 10.5 4.85988 11.6 7.63988 12.52L10.1599 13.36C10.3799 13.43 10.5599 13.61 10.6299 13.83L11.4699 16.35C12.3899 19.13 13.4999 20.12 14.2199 20.12C14.9399 20.12 16.0399 19.13 16.9699 16.35L19.7999 7.86001C20.3099 6.32001 20.2199 5.06001 19.5699 4.41001C18.9199 3.76001 17.6599 3.68001 16.1299 4.19001L7.63988 7.03001Z"
                      fill="currentColor"
                    ></path>
                    <path
                      d="M10.11 14.4C9.92005 14.4 9.73005 14.33 9.58005 14.18C9.29005 13.89 9.29005 13.41 9.58005 13.12L13.16 9.53C13.45 9.24 13.93 9.24 14.22 9.53C14.51 9.82 14.51 10.3 14.22 10.59L10.64 14.18C10.5 14.33 10.3 14.4 10.11 14.4Z"
                      fill="currentColor"
                    ></path>
                  </g>
                  <defs>
                    <filter id="shadow">
                      <fedropshadow
                        dx="0"
                        dy="1"
                        stdDeviation="0.6"
                        flood-opacity="0.5"
                      ></fedropshadow>
                    </filter>
                  </defs>
                </svg>
              </div>
              <p>
                <span style="--i:5">S</span>
                <span style="--i:6">e</span>
                <span style="--i:7">n</span>
                <span style="--i:8">d</span>
                <span style="--i:9"> </span>
                <span style="--i:10">C</span>
                <span style="--i:11">o</span>
                <span style="--i:12">m</span>
                <span style="--i:13">m</span>
                <span style="--i:14">e</span>
                <span style="--i:15">n</span>
                <span style="--i:16">t</span>
              </p>
            </div>
            <div class="state state--sent">
              <div class="icon">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  height="1em"
                  width="1em"
                  stroke-width="0.5px"
                  stroke="black"
                >
                  <g style="filter: url(#shadow)">
                    <path
                      fill="currentColor"
                      d="M12 22.75C6.07 22.75 1.25 17.93 1.25 12C1.25 6.07 6.07 1.25 12 1.25C17.93 1.25 22.75 6.07 22.75 12C22.75 17.93 17.93 22.75 12 22.75ZM12 2.75C6.9 2.75 2.75 6.9 2.75 12C2.75 17.1 6.9 21.25 12 21.25C17.1 21.25 21.25 17.1 21.25 12C21.25 6.9 17.1 2.75 12 2.75Z"
                    ></path>
                    <path
                      fill="currentColor"
                      d="M10.5795 15.5801C10.3795 15.5801 10.1895 15.5001 10.0495 15.3601L7.21945 12.5301C6.92945 12.2401 6.92945 11.7601 7.21945 11.4701C7.50945 11.1801 7.98945 11.1801 8.27945 11.4701L10.5795 13.7701L15.7195 8.6301C16.0095 8.3401 16.4895 8.3401 16.7795 8.6301C17.0695 8.9201 17.0695 9.4001 16.7795 9.6901L11.1095 15.3601C10.9695 15.5001 10.7795 15.5801 10.5795 15.5801Z"
                    ></path>
                  </g>
                </svg>
              </div>
              <p>
                <span style="--i:5">S</span>
                <span style="--i:6">e</span>
                <span style="--i:7">n</span>
                <span style="--i:8">t</span>
              </p>
            </div>
          </button>
          <small id="text-count" class="text-gray-500"></small>
        </div>
      </form>
    </div>
  </div>

  <!-- <div id="comment-list-header" class="flex flex-row justify-start items-center gap-4">
    <button class="rounded-xl border-2 border-gray-500 bg-gray-200 hover:bg-gray-300 p-2 flex flex-col justify-center items-center text-sm tranistion all duration-300" style="display: hidden;">Latest Comments</button>
    <button class="rounded-xl border-2 border-gray-500 bg-gray-200 hover:bg-gray-300 p-2 flex flex-col justify-center items-center text-sm tranistion all duration-300">Oldest Comments</button>
  </div> -->
  
  <div id="commentList" class="mt-4" >
  </div>
  <div id="commentList-container" class="mt-4 hidden" >
    <% if (comments.length) { %>
      <% comments.forEach((comment) => { %>
        <div class="w-full">
          <div class="flex flex-row w-full p-2 my-4 cursor-pointer hover:bg-gray-100">
            <div class="rounded-full w-8 h-8">
              <img class="h-full object-cover" src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSAXKkELt_XuteDLQY_HKcilbvgT3LDOm5WkQ&s" alt="Profile" />
            </div>
            <div class="ml-2 w-full">
              <div class="font-bold text-xs font-sans hover:text-red-500 transition-colors duration-300">
                <%= comment.commenterName %>
              </div>
              <div class="text-xs text-gray-400"><%= new Date(comment.createdAt).toLocaleString() %></div>
              <div class="mt-2 w-full text-sm font-serif"><%= comment.content %></div>
            </div>
          </div>
          <hr />
        </div>
      <% }) %>
    <% } else { %>
      <div id="message-no-comment" class="w-full flex justify-center items-center font-serif text-xl">There are currently no comments, be the first to comment on the post!</div>
    <% } %>
  </div>

  <div id="comment-list-footer-container" class="flex flex-row justify-center items-center p-4" style="display: none;">
    <div id="pag-prev-btn" class="text-sm mr-2 w-fit h-5 p-4 sm:px-4 px-2 cursor-pointer bg-gray-300 hover:bg-gray-400 transition-all duration-300 flex flex-col justify-center items-center rounded-lg" style="border-radius: 40px 10px 10px 40px; border: 1px solid black;">prev</div>
    <div id="comment-list-footer" class="flex  flex-row justify-center items-center gap-2"></div>
    <div id="pag-next-btn" class="text-sm ml-2 w-fit h-5 p-4 sm:px-4 px-2 cursor-pointer bg-gray-300 hover:bg-gray-400 transition-all duration-300 flex flex-col justify-center items-center rounded-lg" style="border-radius: 10px 40px 40px 10px; border: 1px solid black;">next</div>
  </div>
</div>
<script src="/socket.io/socket.io.js"></script>
<script>
  function pagComment() {
    if (!document.getElementById('commentList-container').classList.contains('hidden')) {
      document.getElementById('commentList-container').classList.add('hidden')
    }
    if (document.getElementById('commentList').classList.contains('hidden')) {
      document.getElementById('commentList').classList.remove('hidden')
    }
    const commentList = document.getElementById('commentList')

    const pagNums = Math.ceil(document.getElementById('commentList-container').children.length / 5);
    const pagPrevBtn = document.getElementById('pag-prev-btn')
    const pagNextBtn = document.getElementById('pag-next-btn')
    if (pagNums > 1) {
      /* Create content for each pag */
      document.getElementById('comment-list-footer-container').style.display = 'flex'
      let commentContentPages = []
      for (let i = 0; i < pagNums; i++) {
        let comments = Array.from(document.getElementById('commentList-container').children).slice(i * 5, i * 5 + 5);
        let contents = ''
        comments.forEach(comment => {
          contents += comment.outerHTML
        })
        commentContentPages.push(contents)
      }
      commentList.innerHTML = commentContentPages[0]
      /* Create Pag Node and addEventListener when we click to the PagNode */
      const commentListFooter = document.getElementById('comment-list-footer');
      let pagNode = ''
      let pagNodes  = ''
      for (let i = 0; i < pagNums; i++) {
        pagNode = `<div id="pag-node-${i+1}" data-id=${i+1} class="w-5 h-5 p-4 cursor-pointer bg-gray-300 hover:bg-gray-400 transition-all duration-300 flex flex-col justify-center items-center rounded-lg" style="display:none">${i + 1}</div>`
        pagNodes += pagNode;
      }
      commentListFooter.innerHTML = pagNodes
      for (let i = 0; i < pagNums; i++) {
        document.getElementById(`pag-node-${i+1}`).addEventListener('click', (event) => {
          for (let j = 0; j < pagNums; j++) {
              document.getElementById(`pag-node-${j+1}`).classList.remove('bg-gray-500')
              document.getElementById(`pag-node-${j+1}`).classList.remove('text-white')
          }
          event.target.classList.add('bg-gray-500')
          event.target.classList.add('text-white')
          currentPage = parseInt(event.target.dataset.id)
          commentList.innerHTML = commentContentPages[parseInt(event.target.dataset.id) - 1]
        })
      }
      /* Display First 3 button if pagNums > 5 or display all if pagNums <= 5 */
      let currentPage = 1;
      if (pagNums > 5) {
        for (let i = currentPage; i < (currentPage + 3); i++) {
          const displayPage = document.getElementById(`pag-node-${i}`)
          if (displayPage != null) {
            displayPage.style.display = 'flex'
          }
        }
        document.getElementById(`pag-node-${pagNums}`).textContent = `...${pagNums}`
        document.getElementById(`pag-node-${pagNums}`).style.display = 'flex'
        document.getElementById(`pag-node-${pagNums}`).addEventListener('click', (event) => {
          // first hide all pagNode
          for (let i = 1; i <= pagNums; i++) {
            const pagNode = document.getElementById(`pag-node-${i}`)
            if (pagNode) {
              pagNode.style.display = 'none'
            }
          }
          // display the last 3 pagNode and change the content of the final node
          for (let i = pagNums; i >= (pagNums - 2); i--) {
            const pagNode = document.getElementById(`pag-node-${i}`)
            if (pagNode) {
              pagNode.style.display = 'flex'
            }
          }
          event.target.textContent = pagNums
          // display 1st node
          document.getElementById('pag-node-1').textContent= '1...'
          document.getElementById('pag-node-1').style.display = 'flex'
        })
        document.getElementById('pag-node-1').addEventListener('click', (event) => {
          //hide all node
          for (let i = 1; i <= pagNums; i++) {
          const pagNode = document.getElementById(`pag-node-${i}`)
            if (pagNode) {
              pagNode.style.display = 'none'
            }
          }
          // display the first 3 pagNode and change the content of the first node
          for (let i = 1; i <= 3; i++) {
            const pagNode = document.getElementById(`pag-node-${i}`)
            if (pagNode) {
              pagNode.style.display = 'flex'
            }
          }
          event.target.textContent = '1';
          // display finalNode
          document.getElementById(`pag-node-${pagNums}`).textContent = `...${pagNums}`
          document.getElementById(`pag-node-${pagNums}`).style.display = 'flex'
        })
      } else {
        for (let i = 1; i <= 5; i++) {
          const displayPage = document.getElementById(`pag-node-${i}`)
          if (displayPage != null) {
            displayPage.style.display = 'flex'
          }
        }
      }
      /* Define Pag Moving Button */
      if (pagNums <= 5) {
        pagPrevBtn.style.display = 'none'
        pagNextBtn.style.display = 'none'
      }
      document.getElementById("pag-node-1").classList.add('bg-gray-500')
      document.getElementById("pag-node-1").classList.add('text-white')
      pagPrevBtn.addEventListener('click', () => {
        if (currentPage > 1) {
          currentPage--;

          if (currentPage + 2 == pagNums) {
            for (let i = 1; i <= pagNums; i++) {
              document.getElementById(`pag-node-${i}`).style.display = 'none'
            }
            for (let i = currentPage; i <= pagNums; i++) {
              document.getElementById(`pag-node-${i}`).style.display = 'flex'
            }
            document.getElementById(`pag-node-${pagNums}`).textContent = `${pagNums}`
            document.getElementById(`pag-node-1`).textContent = '1...'
            document.getElementById(`pag-node-1`).style.display = 'flex'
          } else if (currentPage + 2 < pagNums) {
            // check if in the top 3 pag node
            if (currentPage - 3 <= 0) {
              // hide all
              for (let i = 1; i <= pagNums; i++) {
                document.getElementById(`pag-node-${i}`).style.display = 'none'
              }
              for (let i = 1; i <= 3; i++) {
                document.getElementById(`pag-node-${i}`).style.display = 'flex'
              }
              document.getElementById(`pag-node-${pagNums}`).style.display = 'flex'
              document.getElementById(`pag-node-${pagNums}`).textContent = `...${pagNums}`
              document.getElementById('pag-node-1').textContent = '1'
            } else if ((currentPage + 1) % 3 == 0) { // if not in the top 3, display two head
              // hide all
              for (let i = 1; i <= pagNums; i++) {
                document.getElementById(`pag-node-${i}`).style.display = 'none'
              }
              for (let i = currentPage; i >= currentPage - 2; i--) {
                document.getElementById(`pag-node-${i}`).style.display = 'flex'
              }
              document.getElementById(`pag-node-${pagNums}`).textContent = `...${pagNums}`
              document.getElementById(`pag-node-${pagNums}`).style.display = 'flex'
              document.getElementById(`pag-node-1`).textContent = '1...'
              document.getElementById(`pag-node-1`).style.display = 'flex'
            }
          }

          document.getElementById(`pag-node-${currentPage}`).classList.add('bg-gray-500')
          document.getElementById(`pag-node-${currentPage}`).classList.add('text-white')
          document.getElementById(`pag-node-${currentPage + 1}`).classList.remove('bg-gray-500')
          document.getElementById(`pag-node-${currentPage + 1}`).classList.remove('text-white')
          commentList.innerHTML = commentContentPages[currentPage - 1]
        }
      })
      pagNextBtn.addEventListener('click', () => {
        if (currentPage < pagNums) {
          currentPage++;
          if (currentPage % 3 == 1 && currentPage + 2 <= pagNums) {
            for (let i = currentPage; i < (currentPage + 3); i++) {
              const displayPage = document.getElementById(`pag-node-${i}`)
              if (displayPage) {
                displayPage.style.display = 'flex'
              }
            }
            for (let i = (currentPage - 3); i < (currentPage); i++) {
              const displayPage = document.getElementById(`pag-node-${i}`)
              if (displayPage) {
                displayPage.style.display = 'none'
              }
            }
          }
          if (currentPage + 2 == pagNums) {
            // hide all
            for (let i = 1; i <= pagNums; i++) {
              document.getElementById(`pag-node-${i}`).style.display = 'none'
            }
            // display the triple end and the first one
            for (let i = currentPage; i <= currentPage + 2; i++) {
              document.getElementById(`pag-node-${i}`).style.display = 'flex'
            }
            document.getElementById('pag-node-1').textContent = '1...'
            document.getElementById('pag-node-1').style.display = 'flex'
            document.getElementById(`pag-node-${pagNums}`).textContent = `${pagNums}`
          } else if (currentPage > 3 && currentPage + 2 <= pagNums) {
            document.getElementById('pag-node-1').textContent = '1...'
            document.getElementById('pag-node-1').style.display = 'flex'
            document.getElementById(`pag-node-${pagNums}`).textContent = `...${pagNums}`
            document.getElementById(`pag-node-${pagNums}`).style.display = 'flex'

          }
          document.getElementById(`pag-node-${currentPage}`).classList.add('bg-gray-500')
          document.getElementById(`pag-node-${currentPage}`).classList.add('text-white')
          document.getElementById(`pag-node-${currentPage - 1}`).classList.remove('bg-gray-500')
          document.getElementById(`pag-node-${currentPage - 1}`).classList.remove('text-white')
          commentList.innerHTML = commentContentPages[currentPage - 1]
        }
      })
    } else {
      if (document.getElementById('commentList-container').classList.contains('hidden')) {
        document.getElementById('commentList-container').classList.remove('hidden')
      }
      if (!document.getElementById('commentList').classList.contains('hidden')) {
        document.getElementById('commentList').classList.add('hidden')
      }
    }
  }
  pagComment();

  const articleSlug = '<%= articleSlug %>';
  const socket = io();

  // Tham gia phòng của bài viết
  socket.emit('joinArticleRoom', articleSlug);
  socket.on('newComment', (comment) => {
    console.log('Received new comment:', comment); // Debug
    const noCommentMessage = document.querySelector('#message-no-comment');
    if (noCommentMessage) {
      noCommentMessage.remove();
    }
    // Find the comment list
    const commentList = document.getElementById('commentList-container');
    if (commentList) {
    // Create the new comment HTML
    const newCommentHTML = `
                          <div class='w-full'>
                            <div class="flex flex-row w-full p-2 my-4 cursor-pointer hover:bg-gray-100">
                              <div class="rounded-full w-8 h-8">
                                <img class="h-full object-cover" src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSAXKkELt_XuteDLQY_HKcilbvgT3LDOm5WkQ&s" alt="Profile" />
                              </div>
                              <div class="ml-2 w-full">
                                <div class="font-bold text-xs font-sans hover:text-red-500 transition-colors duration-300">
                                  ${comment.account?.name || 'Unknown commenter'}
                                </div>
                                <div class="text-xs text-gray-400">${new Date(comment.createdAt).toLocaleString()}</div>
                                <div class="mt-2 w-full text-sm font-serif">${comment.content || 'No content'}</div>
                              </div>
                            </div>
                            <hr />
                          </div>
                          `;
      // Prepend the new comment to the comment list
      commentList.insertAdjacentHTML('afterbegin', newCommentHTML);
      pagComment()
    } else {
      console.error('Comment list not found');
    }
  });

  /* eslint-disable no-undef */
  const textCount = document.getElementById('text-count');
  textCount.innerHTML = `0 / 500 words`;
  document.addEventListener('input', (event) => {
    if (event.target.classList.contains('auto-expand')) {
      const textarea = event.target;
      textarea.style.height = 'auto'; // Reset height to calculate correctly
      textarea.style.height = `${textarea.scrollHeight}px`; // Set height based on content
    }
  });

  const message = document.getElementById('message');
  message.addEventListener('input', (event) => {
    const value = event.target.value;
    const textCount = document.getElementById('text-count');
    textCount.innerHTML = `${value.length} / 500 words`;
  });
  // Kết nối Socket.IO
  // Lắng nghe sự kiện newComment
  // Xử lý gửi form bằng AJAX
  const commentForm = document.getElementById('comment-form');
  commentForm.addEventListener('submit', async (event) => {
    event.preventDefault(); // Ngăn chặn reload trang

    const content = document.getElementById('message').value;
    const formAction = commentForm.getAttribute('action');

    try {
      const response = await fetch(formAction, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ content })
      });
      if (response.ok) {
        const newComment = await response.json(); // Nhận comment mới từ server
        socket.emit('addComment', newComment); // Phát tới server
        document.getElementById('comment-length').textContent = parseInt(document.getElementById('comment-length').textContent) + 1; // reset the count comment
        // pagComment();
        document.getElementById('message').value = ''; // Reset form
        // set text-count display to 0
        const textCount = document.getElementById('text-count');
        textCount.innerHTML = `0 / 500 words`;
      } else {
        console.error('Failed to post comment:', response.statusText);
      }
    } catch (error) {
      console.error('Error posting comment:', error);
    }
  });
</script>

<script>
  document.addEventListener('DOMContentLoaded', () => {

  })
</script>