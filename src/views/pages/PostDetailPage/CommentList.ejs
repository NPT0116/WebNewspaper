<div class="border-2 p-5 rounded-lg w-full">
  <div id="comment-header" class="flex sm:flex-row flex-col justify-between items-center">
    <h1 class="text-2xl font-bold">Comments (<%=comments.length%>)</h1>
    <%if (profile) {%>
    <%} else {%>
    <div id="comment-guest-nav" class="text-center">
      <a href="/login" class="text-blue-500 font-bold hover:text-blue-700 cursor-pointer">Login</a>
      |
      <a href="/register" class="text-blue-500 font-bold hover:text-blue-700 cursor-pointer">Register</a>
      To send comment
    </div>
    <%} %>
  </div>

  <div class="mt-8 w-full">
    <div class="flex flex-col space-y-2" style="padding-bottom: 30px; border-bottom: 2px solid black">
      <form id="comment-form" action="/section/<%= sectionSlug %>/article/<%= articleSlug %>/save-comment" method="POST" class="w-full" <%=profile ? '' : 'disabled' %>>
        <textarea
          id="message"
          name="content"
          placeholder="What do you think about this article ?"
          rows="4"
          required
          class="w-full px-4 py-2 overflow-y-hidden bg-gray-200 rounded-lg shadow-sm resize-none focus:ring-2 focus:ring-gray-500 focus:border-gray-500 transition duration-200 ease-in-out auto-expand"
          <%=profile ? '' : 'disabled' %>
        ></textarea>

        <div class="flex justify-between">
          <button type="submit" class="text-[10px] sm:text-xl rounded-lg <%=profile ? 'bg-gray-900 hover:bg-gray-500' : 'bg-gray-500' %>   px-4 py-2 text-white font-bold transition-all duration-200" <%=profile ? '' : 'disabled' %>>Submit</button>
          <small id="text-count" class="text-gray-500"></small>
        </div>
      </form>
    </div>
  </div>
  <div id="commentList" class="mt-20" style="margin-top: 30px">
    <% if (comments.length) {%> <%comments.forEach((comment) => {%>
    <div class="w-full"><%- include('../../components/Comment/Comment', {comment: comment}) %></div>
    <%})%>
    <%} else {%>
    <div id="message-no-comment" class="w-full flex justify-center items-center font-serif text-xl">There are currently no comments, be the first to comment on the post!</div>
    <%} %>
  </div>
</div>
<script src="/socket.io/socket.io.js"></script>
<script>
  const articleSlug = '<%= articleSlug %>';
  const socket = io();

  // Tham gia phòng của bài viết
  socket.emit('joinArticleRoom', articleSlug);
  socket.on('newComment', (comment) => {
    console.log('Received new comment:', comment); // Debug
    document.querySelector('#message-no-comment').textContent = '';

    // Find the comment input block
    const commentInputBlock = document.querySelector('.flex.flex-col.space-y-2');
    if (commentInputBlock) {
      // Create the new comment HTML
      const newCommentHTML = `
      <div class="flex flex-row w-full p-2 my-10 cursor-pointer hover:bg-gray-100">
        <div class="rounded-full w-12 h-12">
          <img class="h-full object-cover" src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSAXKkELt_XuteDLQY_HKcilbvgT3LDOm5WkQ&s" alt="Profile" />
        </div>
        <div class="ml-4 w-full">
          <div class="font-bold text-sm font-sans hover:text-red-500 transition-colors duration-300">
            ${comment.account?.name || 'Unknown commenter'}
          </div>
          <div class="mt-4 w-full font-serif">${comment.content || 'No content'}</div>
        </div>
      </div>
      <hr />
  `;

      // Insert the new comment directly after the input block
      commentInputBlock.insertAdjacentHTML('afterend', newCommentHTML);
    } else {
      console.error('Comment input block not found');
    }
  });

  /* eslint-disable no-undef */
  const textCount = document.getElementById('text-count');
  textCount.innerHTML = `0 / 500 words`;
  document.addEventListener('input', (event) => {
    if (event.target.classList.contains('auto-expand')) {
      const textarea = event.target;
      textarea.style.height = 'auto'; // Reset height to calculate correctly
      textarea.style.height = `${textarea.scrollHeight}px`; // Set height based on content
    }
  });

  const message = document.getElementById('message');
  message.addEventListener('input', (event) => {
    const value = event.target.value;
    const textCount = document.getElementById('text-count');
    textCount.innerHTML = `${value.length} / 500 words`;
  });
  // Kết nối Socket.IO
  // Lắng nghe sự kiện newComment
  // Xử lý gửi form bằng AJAX
  const commentForm = document.getElementById('comment-form');
  commentForm.addEventListener('submit', async (event) => {
    event.preventDefault(); // Ngăn chặn reload trang

    const content = document.getElementById('message').value;
    const formAction = commentForm.getAttribute('action');

    try {
      const response = await fetch(formAction, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ content })
      });

      if (response.ok) {
        const newComment = await response.json(); // Nhận comment mới từ server
        socket.emit('addComment', newComment); // Phát tới server
        document.getElementById('message').value = ''; // Reset form
      } else {
        console.error('Failed to post comment:', response.statusText);
      }
    } catch (error) {
      console.error('Error posting comment:', error);
    }
  });
</script>
